// https://github.com/Ajaxy/tinyspec
// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status


// This is a WIP HTTP JSON REST-like API specification.
// It refers to the desired state by both frontend and backend.
// Routes not implemented in the backend are marked with //TODO:
//  - the //TODO: tag shall be removed once a route is created backend
//    and adheres to the specification in this file.
// What's not very relevant currently is below //later...


// MODELS

// for writing:
QuoteInputT {Teacher: i|s, Context: s, Text: s}
TeacherInputT {Name: s, Title: s, Note: s}

// for reading:
UnverifiedQuoteT {QuoteID: i, Teacher: i|s, Context: s, Text: s, Unixtime i}
QuoteT {QuoteID: i, Teacher: TeacherT, Context: s, Text: s, Unixtime: i, Upvotes: i}
TeacherT {TeacherID: i, Name: s, Title: s, Note: s}

ErrorT {error: s}


// USER ROUTES

	//TODO: password-protected (http basic auth)

	// pages:
	// - /submit -> later... TODO: suggest similar
	// - TODO: /?sortby?=(teachername|time)&page?=i

	POST /api/quotes/submit QuoteInputT
		=> 200 OK
		=> 401 Unauthorized
		=> 400 /*Bad Request*/ ErrorT
		=> 500 Internal Server Error

	//later... TODO:
	POST /api/quotes/:id/upvote
		=> 200 OK
		=> 401 Unauthorized
		=> 404 Not Found
		//..

	//later... TODO:
	POST /api/quotes/similar {text: s}
		=> {quotes: QuoteT[]}
		=> 204 No Content
		=> 400 /*Bad Request*/ ErrorT
		=> 401 Unauthorized
		//..


// ADMIN ROUTES

	//TODO: password-protected (http basic auth)

	// pages:
	// - /admin/unverifiedquotes -> TODO: functionality
	// - TODO: /admin/quotes
	// - later... TODO: /admin/teacher

	PUT /api/unverifiedquotes/:id QuoteInputT
		=> UnverifiedQuoteT
		=> 400 /*Bad Request*/ ErrorT
		=> 401 Unauthorized
		=> 404 Not Found
		//..

	DELETE /api/unverifiedquotes/:id
		=> 200 OK
		=> 404 Not Found
		=> 401 Unauthorized
		//..

	PUT /api/unverifiedquotes/:id/confirm
		=> 200 OK
		=> 404 Not Found
		=> 401 Unauthorized
		//..

	POST /api/teachers TeacherInputT
		=> 200 OK
		=> 400 /*Bad Request*/ ErrorT
		=> 401 Unauthorized
		//..
	
	PUT /api/teachers/:id TeacherInputT
		=> 200 OK
		=> 400 /*Bad Request*/ ErrorT
		=> 401 Unauthorized
		=> 404 Not Found
		//..

	POST /api/quotes/:id/unvote
		=> 200 OK // don't complain if the user hadn't voted already
		=> 404 Not Found
		=> 401 Unauthorized
		//..

	POST /api/quotes/:id/vote
		=> 200 OK // don't complain if the user had voted already
		=> 404 Not Found
		=> 401 Unauthorized
		//..

	//later... TODO:
	DELETE /api/quotes/:id
		=> 200 OK
		=> 404 Not Found
		=> 401 Unauthorized
		//..

	//later... TODO:
	GET /api/unverifiedquotes/:id/similar
		=> {quotes: QuoteT[]}
		=> 404 Not Found
		=> 401 Unauthorized
		//..
